@model HotelAtr.DAL.Model.SliderArea

@{
    ViewBag.Title = "Создание";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("Create", "SliderAreas", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Слайда</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Header, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Header, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Header, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Url, "Вставьте ссылку из интернета , как альтернативу", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Url, "Может быть пустым", new { @class = "text-success" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PathImg, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("file", "", new { type = "file", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PathImg, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Создать" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Обратно к списку", "Index", null, htmlAttributes: new { @class = "btn btn-outline-primary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
